package old;
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class InterestingNumber
{
	public String isInteresting(String x)
	{
		String INTERESTING = "Interesting";
		String NOT_INTERESTING = "Not interesting";
		try {
			if (x.length() % 2 != 0) return NOT_INTERESTING;
			for (int i = 0; i < x.length() /2; i++) {
				int move = Character.getNumericValue(x.charAt(i));
				if (move != Character.getNumericValue(x.charAt(i + 1 + move))) {
					return NOT_INTERESTING;
				}
			}
		} catch(Exception e) {
			return NOT_INTERESTING;
		}
		return INTERESTING;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, String p1) {
		System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
		System.out.println("]");
		InterestingNumber obj;
		String answer;
		obj = new InterestingNumber();
		long startTime = System.currentTimeMillis();
		answer = obj.isInteresting(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			res = answer.equals(p1);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
			if (hasAnswer) {
				System.out.println("Desired answer:");
				System.out.println("\t" + "\"" + p1 + "\"");
			}
			System.out.println("Your answer:");
			System.out.println("\t" + "\"" + answer + "\"");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;
		
		String p0;
		String p1;
		
		// ----- test 0 -----
		disabled = false;
		p0 = "2002";
		p1 = "Interesting";
		all_right = (disabled || KawigiEdit_RunTest(0, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 1 -----
		disabled = false;
		p0 = "1001";
		p1 = "Not interesting";
		all_right = (disabled || KawigiEdit_RunTest(1, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 2 -----
		disabled = false;
		p0 = "41312432";
		p1 = "Interesting";
		all_right = (disabled || KawigiEdit_RunTest(2, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 3 -----
		disabled = false;
		p0 = "611";
		p1 = "Not interesting";
		all_right = (disabled || KawigiEdit_RunTest(3, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 4 -----
		disabled = false;
		p0 = "64200246";
		p1 = "Interesting";
		all_right = (disabled || KawigiEdit_RunTest(4, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		// ----- test 5 -----
		disabled = false;
		p0 = "631413164";
		p1 = "Not interesting";
		all_right = (disabled || KawigiEdit_RunTest(5, p0, true, p1) ) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------
		
		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// PROBLEM STATEMENT
	// Fox Ciel thinks that the number 41312432 is interesting.
	// This is because of the following property:
	// There is exactly 1 digit between the two 1s, there are exactly 2 digits between the two 2s, and so on.
	// 
	// 
	// Formally, Ciel thinks that a number X is interesting if the following property is satisfied:
	// For each D between 0 and 9, inclusive, X either does not contain the digit D at all, or it contains exactly two digits D, and there are precisely D other digits between them.
	// 
	// 
	// You are given a String x that contains the digits of a positive integer.
	// Return "Interesting" if that integer is interesting, otherwise return "Not interesting".
	// 
	// DEFINITION
	// Class:InterestingNumber
	// Method:isInteresting
	// Parameters:String
	// Returns:String
	// Method signature:String isInteresting(String x)
	// 
	// 
	// CONSTRAINTS
	// -x will correspond to an integer between 1 and 1,000,000,000, inclusive.
	// -x will not start with a '0'.
	// 
	// 
	// EXAMPLES
	// 
	// 0)
	// "2002"
	// 
	// Returns: "Interesting"
	// 
	// There are 0 digits between the two 0s, and 2 digits between the two 2s, so this is an interesting number.
	// 
	// 1)
	// "1001"
	// 
	// Returns: "Not interesting"
	// 
	// There should be 1 digit between the two 1s, but there are 2 digits between them. Hence, this number is not interesting.
	// 
	// 2)
	// "41312432"
	// 
	// Returns: "Interesting"
	// 
	// This is the number in the statement.
	// 
	// 3)
	// "611"
	// 
	// Returns: "Not interesting"
	// 
	// There is only one digit 6 in this number, so it's not interesting.
	// 
	// 4)
	// "64200246"
	// 
	// Returns: "Interesting"
	// 
	// 
	// 
	// 5)
	// "631413164"
	// 
	// Returns: "Not interesting"
	// 
	// This number contains the digit 1 three times.
	// 
	// END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
